params {

    // run downsampling benchmark
    run_downsampling_benchmark = true

    // helper script
    download_helper            = "${projectDir}/bin/downsampling_benchmark/download_helper.R"
    transformation_helper      = "${projectDir}/bin/transformations/transformation_helper.R"

}

process {

    // container = "suzannejin/benchmark-neighbour:main"
    container = "/users/cn/sjin/projects/proportionality/benchmark-neighbour/nextflow/singularity_cache/suzannejin-benchmark-neighbour-main.img"

    withName: GET_DATA_FOR_DOWNSAMPLING_BENCHMARK {
        storeDir  = { "${params.OUTPUT_DIR}/downsampling" }
        time      = { workflow.stubRun ? 10.min : 1.h   * task.attempt } 
        memory    = { workflow.stubRun ? 1.GB   : 3.GB * task.attempt } 
        cpus      = { workflow.stubRun ? 1      : 1     * task.attempt }
        container = "${container}"
    }
    withName: PLOT_SMARTSEQ3_DATA {
        storeDir  = { "${params.OUTPUT_DIR}/downsampling" }
        time      = { workflow.stubRun ? 10.min : 1.h   * task.attempt } 
        memory    = { workflow.stubRun ? 1.GB   : 3.GB * task.attempt } 
        cpus      = { workflow.stubRun ? 1      : 1     * task.attempt }
        container = "${container}"
    }
    withName: TRANSFORM_DEEPLY_SEQUENCED_DATA {
        storeDir  = { "${params.OUTPUT_DIR}/downsampling" }
        time      = { workflow.stubRun ? 10.min : 1.h   * task.attempt } 
        memory    = { workflow.stubRun ? 1.GB   : 10.GB * task.attempt } 
        cpus      = { workflow.stubRun ? 1      : 1     * task.attempt }
        container = "${container}"
    }
    withName: CALCULATE_DOWNSAMPLING_AGREEMENT {
        publishDir = [
            path  : "${params.OUTPUT_DIR}/downsampling",
            mode  : 'copy'
        ]
        time      = { workflow.stubRun ? 10.min : 1.h   * task.attempt } 
        memory    = { workflow.stubRun ? 1.GB   : 10.GB * task.attempt } 
        cpus      = { workflow.stubRun ? 1      : 1     * task.attempt }
        container = "${container}"
    }
}